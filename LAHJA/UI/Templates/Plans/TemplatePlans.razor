@using Domain.ShareData.Base
@using LAHAJ.Loading
@using LAHJA.ContextServices
@using LAHJA.Data.UI.Components
@using LAHJA.Data.UI.Components.Plan
@using LAHJA.Helpers
@using LAHJA.UI.Components.Auth
@using LAHJA.Data.UI.Templates.Auth
@using LAHJA.UI.Components.General.Skeleton
@using LAHJA.UI.Components.Index.MainSectionCard
@using LAHJA.UI.Components.Plan
@inject LAHJA.Data.UI.Templates.Subscriptions.TemplateSubscription templateSubscription
@inject LAHJA.Data.UI.Templates.Plans.TemplatePlans Template
@inject LAHJA.Data.UI.Templates.Profile.TemplateProfile TemplateProfile
@inherits AppUtilityComponent


@* @if (isLoading){*@

@*     <LoadingComponent /> *@
@* } *@
@* else{ *@

@if (Template != null)
{
    <MainPlan 
    IsLoading="isLoading"
    DataBuilds="dataBuilds"
    SubmitSelectPlan="Template.BuilderComponentsCommand.SubmitSubscriptionPlan"
    SubmitOpenSubscription="OnSubmitOpenSubscription" />
}





@code{


    [Parameter] public int CountItemsShow{   set => _countItemsShow = value; get=>_countItemsShow; } 
    [Parameter] public bool IsLoading { get => isLoading; set => isLoading = value; }
    private int _countItemsShow = 0;
    private bool isLoading = true;

    private List<PlanViewModel> dataBuilds=new();






    private async Task OnSubmitOpenSubscription(PlanViewModel plan)
    {
        if (templateSubscription.BuilderComponents.GetActiveSubscription != null)
        {
            var result = await templateSubscription.BuilderComponents.GetActiveSubscription();
            if (result != null && result.Succeeded)
            {
                plan.SubscriptionId = result.Data?.Id;
                GoTo($"{RouterPage.SUBSCRIPTION_DETAILS}/{plan.SubscriptionId}/{plan.Id}");
            }
            else
            {

            }

        }
    }


    protected override async Task OnInitializedAsync()
    {
        isLoading = true;

     

        var data = new DataBuildPlansBase { Lg = CultureInfo.CurrentUICulture.Name, Take = _countItemsShow, PremiumPlanNumber = 2 };
        if (Template.BuilderComponentsQuery.GetAllPlans != null)
        {

            var response = await Template.BuilderComponentsQuery.GetAllPlans(data);
            if (response!=null && response.Succeeded)
            {
                var _dataBuilds = response.Data;
                dataBuilds = _dataBuilds;
                

              
            }
        }

        isLoading = false;
        StateHasChanged();
        // await Template.getAllSubscriptionsPlansAsync(filter, 2);
     
    }


       
} 